name: Build Jupyter Notebooks

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  JULIA_NUM_THREADS: 2
  PYTHON_VER: '3.10.7'
  JULIA_VER: '1.8.1'
  JULIA_CACHE: '1'

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Python ${{ env.PYTHON_VER }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VER }}
          cache: 'pip'
          cache-dependency-path: '**/requirements.txt'
      - name: Install Python dependencies
        run: |
          pip install -U pip wheel setuptools
          pip install -r requirements.txt -r .ci/requirements.txt
      - name: Setup Julia ${{ env.JULIA_VER }}
        uses: julia-actions/setup-julia@v1
        with:
          version: ${{ env.JULIA_VER }}
      - name: Cache Julia deps
        uses: actions/cache@v3
        with:
          path: ~/.julia
          key: ${{ runner.os }}-julia-${{ env.JULIA_CACHE }}-${{ hashFiles('**/Manifest.toml') }}
          restore-keys: |
            ${{ runner.os }}-julia-${{ env.JULIA_CACHE }}-
      - name: Install Julia deps
        run: |
          julia --color=yes --project="" -e 'import Pkg; Pkg.add("IJulia"); Pkg.build("IJulia")'
          julia --color=yes --project=@. -e 'import Pkg; Pkg.instantiate()'
      - name: Run Notebooks
        run: |
          parallel -j2 jupyter nbconvert --to notebook --ExecutePreprocessor.timeout=600 --execute --inplace {} ::: docs/*.ipynb
      - name: Build website
        run: jupyter-book build docs --warningiserror --keep-going -v
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v2
      - name: Upload page artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: docs/_build/html

  # Deployment job
  deploy:
    needs: ci
    if: github.ref == 'refs/heads/main'
    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write # to deploy to Pages
      id-token: write # to verify the deployment originates from an appropriate source
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
